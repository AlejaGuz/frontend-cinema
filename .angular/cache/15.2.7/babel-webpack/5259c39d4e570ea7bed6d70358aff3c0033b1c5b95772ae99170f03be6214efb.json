{"ast":null,"code":"import { TicketModel } from '../models/ticket.model';\nimport { SaleModel } from '../models/sale.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/showing.service\";\nimport * as i2 from \"../services/chair.service\";\nimport * as i3 from \"../services/sale.service\";\nimport * as i4 from \"../services/schedule.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nfunction SaleComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2.showID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.movieName);\n  }\n}\nfunction SaleComponent_tr_10_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function SaleComponent_tr_10_td_1_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onClick($event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const r_r5 = ctx.$implicit;\n    const c_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"id\", \"\", r_r5, \"\", c_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", r_r5, \"\", c_r3, \"\");\n  }\n}\nfunction SaleComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, SaleComponent_tr_10_td_1_Template, 3, 4, \"td\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n  }\n}\nexport let SaleComponent = /*#__PURE__*/(() => {\n  class SaleComponent {\n    constructor(showingService, chairService, saleService, scheduleService, router) {\n      this.showingService = showingService;\n      this.chairService = chairService;\n      this.saleService = saleService;\n      this.scheduleService = scheduleService;\n      this.router = router;\n      this.rows = [];\n      this.columns = [];\n      this.saleValue = 0;\n      this.chairsSellList = [];\n      this.disableChairs = [];\n      this.allChairsList = [];\n      this.discount = 0;\n    }\n    ngOnInit() {\n      //this.FullColumns();\n      try {\n        this.showingService.getShowings().subscribe(data => {\n          this.showings = data;\n        });\n        this.chairService.getRows().subscribe(data => {\n          this.columns = data;\n        });\n        this.chairService.getNumbers().subscribe(data => {\n          this.rows = data;\n        });\n      } catch (e) {\n        console.log(\"error: \" + e);\n      }\n    }\n    onChange() {\n      console.log(\"ID Selected: \" + this.selectedItem);\n      this.saleValue = 0;\n      let button = document.getElementById(\"sellbtn\");\n      if (button) {\n        button.disabled = false;\n      }\n      this.clearColors();\n      this.chairService.getOccupiedChairsByShow(this.selectedItem).subscribe(data => {\n        this.disableChairs = data;\n        if (this.disableChairs != null) {\n          this.chairsColors();\n        }\n      });\n      this.showingService.getShowingById(this.selectedItem).subscribe(data => {\n        let idSch = data.scheduleID;\n        if (idSch != undefined) {\n          this.scheduleService.getScheduleById(idSch).subscribe(d => {\n            if (d.discount != undefined) {\n              this.discount = d.discount;\n            } else {\n              this.discount = 0;\n            }\n          });\n        }\n      });\n    }\n    onClick(event) {\n      console.log(\"El botón presionado es: \" + event.target.id);\n      let idB = this.getIdsRowColumn(event.target.id);\n      const button = document.getElementById(event.target.id);\n      if (button) {\n        if (button.style.backgroundColor == 'green') {\n          button.style.backgroundColor = 'lightgrey';\n          this.deleteSeat(parseInt(idB[0]), idB[1]);\n          this.chairService.getChairByRowColumn(parseInt(idB[0]), idB[1]).subscribe(data => {\n            this.chairService.getPriceByLever(data.levelID).subscribe(p => {\n              let price = p;\n              if (this.discount > 0) {\n                price = p - p * this.discount / 100;\n              }\n              console.log(\"precio antes de descuento: \" + p);\n              console.log(\"descuento: \" + this.discount);\n              this.saleValue -= price;\n            });\n          });\n        } else {\n          button.style.backgroundColor = 'green';\n          let row = parseInt(idB[0]);\n          console.log(\"column tranform: \" + idB[1]);\n          this.chairService.getChairByRowColumn(row, idB[1]).subscribe(data => {\n            console.log(data.toString());\n            this.chairsSellList.push(data);\n            this.chairService.getPriceByLever(data.levelID).subscribe(p => {\n              let price = p;\n              if (this.discount > 0) {\n                price = p - p * this.discount / 100;\n              }\n              this.saleValue += price;\n            });\n          });\n        }\n      }\n    }\n    sell() {\n      if (this.chairsSellList != null) {\n        if (this.chairsSellList.length > 0) {\n          let tickets = [];\n          this.chairsSellList.forEach(item => {\n            console.log(\"item: \" + item.chairID);\n            if (item.chairID !== undefined) {\n              let t = new TicketModel();\n              t.idChair = item.chairID;\n              t.idShowing = this.selectedItem;\n              tickets.push(t);\n            }\n          });\n          let sale = new SaleModel();\n          sale.date = new Date();\n          sale.saleValue = this.saleValue;\n          sale.showingID = this.selectedItem;\n          sale.tickets = tickets;\n          this.saleService.postSale(sale).subscribe(data => {\n            console.log(\"data sale: \" + data);\n          });\n          this.router.navigateByUrl('/', {\n            skipLocationChange: true\n          }).then(() => {\n            this.router.navigate(['create-sale']).then(() => {\n              console.log(`After navigation I am on:${this.router.url}`);\n            });\n          });\n        } else {\n          window.alert(\"You should select at least 1 seat\");\n        }\n      } else {\n        window.alert(\"You should select at least 1 seat\");\n      }\n    }\n    getIdsRowColumn(id) {\n      let splitIds = [];\n      if (id.length == 3) {\n        let num = id.charAt(0) + id.charAt(1);\n        let row = id.charAt(2);\n        splitIds.push(num);\n        splitIds.push(row);\n      } else {\n        let num = id.charAt(0);\n        let row = id.charAt(1);\n        splitIds.push(num);\n        splitIds.push(row);\n      }\n      return splitIds;\n    }\n    deleteSeat(number, row) {\n      let ix = this.chairsSellList.indexOf(this.chairsSellList.filter(c => c.number == number && c.row == row)[0]);\n      console.log(\"indice a eliminar: \" + ix);\n      this.chairsSellList.splice(ix, 1);\n    }\n    chairsColors() {\n      this.disableChairs.forEach(item => {\n        let idBtn = item.number + \"\" + item.row;\n        let button = document.getElementById(idBtn);\n        if (button) {\n          console.log(\"button is true idBtn: \" + idBtn);\n          button.style.backgroundColor = 'red';\n          button.disabled = true;\n        }\n      });\n    }\n    clearColors() {\n      if (this.disableChairs != null) {\n        this.disableChairs.forEach(item => {\n          let idBtn = item.number + \"\" + item.row;\n          let button = document.getElementById(idBtn);\n          if (button) {\n            console.log(\"button is true idBtn: \" + idBtn);\n            button.style.backgroundColor = 'lightgrey';\n            button.disabled = false;\n          }\n        });\n      }\n    }\n  }\n  SaleComponent.ɵfac = function SaleComponent_Factory(t) {\n    return new (t || SaleComponent)(i0.ɵɵdirectiveInject(i1.ShowingService), i0.ɵɵdirectiveInject(i2.ChairService), i0.ɵɵdirectiveInject(i3.SaleService), i0.ɵɵdirectiveInject(i4.ScheduleService), i0.ɵɵdirectiveInject(i5.Router));\n  };\n  SaleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SaleComponent,\n    selectors: [[\"app-sale\"]],\n    decls: 25,\n    vars: 5,\n    consts: [[1, \"box\"], [1, \"shows\"], [3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"tableShows\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"10\", 1, \"pantalla\"], [\"id\", \"saleValue\"], [\"id\", \"discount\"], [\"id\", \"sellbtn\", \"disabled\", \"\", 3, \"click\"], [3, \"value\"], [1, \"seatbtn\", 3, \"id\", \"click\"]],\n    template: function SaleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Showing Selection\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"select\", 2);\n        i0.ɵɵlistener(\"change\", function SaleComponent_Template_select_change_5_listener() {\n          return ctx.onChange();\n        })(\"ngModelChange\", function SaleComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.selectedItem = $event;\n        });\n        i0.ɵɵtemplate(6, SaleComponent_option_6_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"table\", 4)(9, \"tbody\");\n        i0.ɵɵtemplate(10, SaleComponent_tr_10_Template, 2, 1, \"tr\", 5);\n        i0.ɵɵelementStart(11, \"tr\")(12, \"td\", 6);\n        i0.ɵɵtext(13, \"PANTALLA\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"h3\");\n        i0.ɵɵtext(16, \"Sale Value\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 7);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"h4\");\n        i0.ɵɵtext(20, \"Discount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 8);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function SaleComponent_Template_button_click_23_listener() {\n          return ctx.sell();\n        });\n        i0.ɵɵtext(24, \"SELL\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedItem);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.showings);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\"$ \", ctx.saleValue, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.discount, \"%\");\n      }\n    },\n    dependencies: [i6.NgForOf, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgModel],\n    styles: [\"button[_ngcontent-%COMP%]:hover:not(:disabled){background:darkorange;transform:scale(1.2)}.seatbtn[_ngcontent-%COMP%]{background-color:#d3d3d3}.box[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.shows[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{margin-left:1.5em}.pantalla[_ngcontent-%COMP%]{text-align:center;font-weight:700}#sellbtn[_ngcontent-%COMP%]{border-radius:10px;background-color:#302b96;color:#f0f8ff;width:100px}#sellbtn[_ngcontent-%COMP%]:hover:not(:disabled){background:darkorange;transform:scale(1.2);font-weight:700}#sellbtn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}\"]\n  });\n  return SaleComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}