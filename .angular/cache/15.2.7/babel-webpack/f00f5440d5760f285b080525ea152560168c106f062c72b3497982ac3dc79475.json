{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SaleService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"https://localhost:7001/api/Sale\";\n  }\n  postSale(sale) {\n    return this.httpClient.post(`${this.baseURL}`, sale);\n  }\n  getSales() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  getSalesgByShow(id) {\n    return this.httpClient.get(`${this.baseURL}` + `/show/${id}`);\n  }\n}\nSaleService.ɵfac = function SaleService_Factory(t) {\n  return new (t || SaleService)(i0.ɵɵinject(i1.HttpClient));\n};\nSaleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SaleService,\n  factory: SaleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IADtB,YAAO,GAAG,iCAAiC;EACL;EAE9CC,QAAQ,CAACC,IAAc;IACrB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAY,GAAG,IAAI,CAACC,OAAO,EAAE,EAAEF,IAAI,CAAC;EACjE;EAEAG,QAAQ;IACN,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAc,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC5D;EAEAG,eAAe,CAACC,EAAS;IACvB,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAc,GAAG,IAAI,CAACF,OAAO,EAAE,GAAC,SAASI,EAAE,EAAE,CAAC;EAC1E;;AAfWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["SaleService","constructor","httpClient","postSale","sale","post","baseURL","getSales","get","getSalesgByShow","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\Angular Test Projects\\frontend-cinema\\src\\app\\services\\sale.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SaleModel } from '../models/sale.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaleService {\n\n  private baseURL = \"https://localhost:7001/api/Sale\";\n  constructor(private httpClient: HttpClient) { }\n\n  postSale(sale:SaleModel):Observable <SaleModel>{\n    return this.httpClient.post<SaleModel>(`${this.baseURL}`, sale);\n  }\n\n  getSales(): Observable <SaleModel[]>{\n    return this.httpClient.get<SaleModel[]>(`${this.baseURL}`);\n  }\n\n  getSalesgByShow(id:Number): Observable <SaleModel[]>{\n    return this.httpClient.get<SaleModel[]>(`${this.baseURL}`+`/show/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}