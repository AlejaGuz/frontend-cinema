{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ScheduleModel } from '../models/schedule.model';\nlet ManageDiscountComponent = class ManageDiscountComponent {\n  constructor(scheduleService, router) {\n    this.scheduleService = scheduleService;\n    this.router = router;\n    this.disCheck = false;\n  }\n  onSubmit() {\n    if (this.validateSubmit()) {\n      let schedule = new ScheduleModel();\n      schedule.hour = this.hour;\n      schedule.minutes = this.minutes;\n      if (this.disCheck) {\n        schedule.isDiscount = true;\n        schedule.discount = this.discount;\n      }\n      this.scheduleService.postSchedule(schedule).subscribe(d => {\n        window.alert(\"successful id: \" + d.scheduleID);\n      });\n      this.router.navigateByUrl('/', {\n        skipLocationChange: true\n      }).then(() => {\n        this.router.navigate(['create-sale']).then(() => {\n          console.log(`After navigation I am on:${this.router.url}`);\n        });\n      });\n    } else {\n      window.alert(\"you can't leave fields blank\");\n    }\n  }\n  check(event) {\n    const myCheckbox = document.getElementById(\"isDisc\");\n    this.disCheck = myCheckbox.checked;\n    console.log(\"check: \" + this.disCheck);\n  }\n  validateSubmit() {\n    let flag = false;\n    if (this.hour != null && this.minutes != null) {\n      if (this.hour != 0) {\n        if (this.disCheck) {\n          if (this.discount != null) {\n            flag = true;\n          }\n        } else {\n          flag = true;\n        }\n      }\n    }\n    return flag;\n  }\n};\nManageDiscountComponent = __decorate([Component({\n  selector: 'app-manage-discount',\n  templateUrl: './manage-discount.component.html',\n  styleUrls: ['./manage-discount.component.css']\n})], ManageDiscountComponent);\nexport { ManageDiscountComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,aAAa,QAAQ,0BAA0B;AAOjD,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAOlCC,YAAoBC,eAAgC,EAAUC,MAAc;IAAxD,oBAAe,GAAfD,eAAe;IAA2B,WAAM,GAANC,MAAM;IAHpE,aAAQ,GAAY,KAAK;EAMzB;EAEAC,QAAQ;IACN,IAAG,IAAI,CAACC,cAAc,EAAE,EAAC;MAEvB,IAAIC,QAAQ,GAAG,IAAIP,aAAa,EAAE;MAClCO,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI;MACzBD,QAAQ,CAACE,OAAO,GAAG,IAAI,CAACA,OAAO;MAC/B,IAAG,IAAI,CAACC,QAAQ,EAAC;QACfH,QAAQ,CAACI,UAAU,GAAC,IAAI;QACxBJ,QAAQ,CAACK,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAGnC,IAAI,CAACT,eAAe,CAACU,YAAY,CAACN,QAAQ,CAAC,CAACO,SAAS,CAACC,CAAC,IAAE;QACvDC,MAAM,CAACC,KAAK,CAAC,iBAAiB,GAACF,CAAC,CAACG,UAAU,CAAC;MAC9C,CAAC,CAAC;MAEF,IAAI,CAACd,MAAM,CAACe,aAAa,CAAC,GAAG,EAAC;QAACC,kBAAkB,EAAC;MAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAI;QAChE,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAACD,IAAI,CAAC,MAAI;UAC7CE,OAAO,CAACC,GAAG,CAAC,4BAA4B,IAAI,CAACpB,MAAM,CAACqB,GAAG,EAAE,CAAC;QAC5D,CAAC,CAAC;MACJ,CAAC,CAAC;KAEH,MAAI;MACHT,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;;EAEhD;EAEOS,KAAK,CAACC,KAAU;IAErB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAqB;IACxE,IAAI,CAACpB,QAAQ,GAAGkB,UAAU,CAACG,OAAO;IAElCR,OAAO,CAACC,GAAG,CAAC,SAAS,GAAC,IAAI,CAACd,QAAQ,CAAC;EAEtC;EAEQJ,cAAc;IACpB,IAAI0B,IAAI,GAAG,KAAK;IAEhB,IAAG,IAAI,CAACxB,IAAI,IAAE,IAAI,IAAI,IAAI,CAACC,OAAO,IAAE,IAAI,EAAC;MACvC,IAAG,IAAI,CAACD,IAAI,IAAE,CAAC,EAAC;QACd,IAAG,IAAI,CAACE,QAAQ,EAAC;UACf,IAAG,IAAI,CAACE,QAAQ,IAAE,IAAI,EAAC;YACrBoB,IAAI,GAAC,IAAI;;SAEZ,MAAI;UACHA,IAAI,GAAC,IAAI;;;;IAKf,OAAOA,IAAI;EACb;CAED;AAjEY/B,uBAAuB,eALnCF,SAAS,CAAC;EACTkC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWlC,uBAAuB,CAiEnC;SAjEYA,uBAAuB","names":["Component","ScheduleModel","ManageDiscountComponent","constructor","scheduleService","router","onSubmit","validateSubmit","schedule","hour","minutes","disCheck","isDiscount","discount","postSchedule","subscribe","d","window","alert","scheduleID","navigateByUrl","skipLocationChange","then","navigate","console","log","url","check","event","myCheckbox","document","getElementById","checked","flag","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Angular Test Projects\\frontend-cinema\\src\\app\\manage-discount\\manage-discount.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ScheduleService } from '../services/schedule.service';\nimport { ScheduleModel } from '../models/schedule.model';\n\n@Component({\n  selector: 'app-manage-discount',\n  templateUrl: './manage-discount.component.html',\n  styleUrls: ['./manage-discount.component.css']\n})\nexport class ManageDiscountComponent {\n\n  hour!:number;\n  minutes!:number;\n  disCheck: boolean = false;\n  discount!:number;\n\n  constructor(private scheduleService: ScheduleService, private router: Router) {\n\n    \n  }\n\n  onSubmit(){\n    if(this.validateSubmit()){\n\n      let schedule = new ScheduleModel();\n      schedule.hour = this.hour;\n      schedule.minutes = this.minutes;\n      if(this.disCheck){\n        schedule.isDiscount=true;\n        schedule.discount = this.discount;\n      }\n\n      this.scheduleService.postSchedule(schedule).subscribe(d=>{\n        window.alert(\"successful id: \"+d.scheduleID);\n      });\n\n      this.router.navigateByUrl('/',{skipLocationChange:true}).then(()=>{\n        this.router.navigate(['create-sale']).then(()=>{\n          console.log(`After navigation I am on:${this.router.url}`)\n        })\n      });\n      \n    }else{\n      window.alert(\"you can't leave fields blank\");\n    }\n  }\n\n  public check(event: any){\n    \n    const myCheckbox = document.getElementById(\"isDisc\") as HTMLInputElement;\n    this.disCheck = myCheckbox.checked;\n\n    console.log(\"check: \"+this.disCheck);\n\n  }\n\n  private validateSubmit():boolean{\n    let flag = false;\n\n    if(this.hour!=null && this.minutes!=null){\n      if(this.hour!=0){\n        if(this.disCheck){\n          if(this.discount!=null){\n            flag=true\n          }\n        }else{\n          flag=true\n        }\n      }\n    }\n\n    return flag;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}