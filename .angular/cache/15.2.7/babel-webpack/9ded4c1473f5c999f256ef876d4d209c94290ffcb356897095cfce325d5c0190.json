{"ast":null,"code":"import { ShowingModel } from '../models/showing.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/showing.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/schedule.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ShowingComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2.scheduleID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", item_r2.hour, \":\", item_r2.minutes, \"\");\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class ShowingComponent {\n  constructor(showingService, router, route, scheduleServices) {\n    this.showingService = showingService;\n    this.router = router;\n    this.route = route;\n    this.scheduleServices = scheduleServices;\n    this.model = new ShowingModel();\n  }\n  ngOnInit() {\n    try {\n      this.scheduleServices.getSchedules().subscribe(data => {\n        this.schedules = data;\n      });\n    } catch (e) {\n      console.log(\"error: \" + e);\n    }\n  }\n  onSubmit() {\n    if (this.moviename != null && this.selectedSchedule != undefined) {\n      if (this.moviename !== \"\") {\n        this.model.movieName = this.moviename;\n        this.model.urlImage = this.url;\n        this.model.scheduleID = this.selectedSchedule;\n        this.showingService.postShowing(this.model).subscribe(data => {\n          console.log(\"Info POST Showing: \" + data);\n          this.router.navigate(['list-showing']);\n        });\n      } else {\n        window.alert(\"Can't leave the fields blank\");\n      }\n    } else {\n      window.alert(\"Can't leave the fields blank\");\n    }\n  }\n}\nShowingComponent.ɵfac = function ShowingComponent_Factory(t) {\n  return new (t || ShowingComponent)(i0.ɵɵdirectiveInject(i1.ShowingService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ScheduleService));\n};\nShowingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowingComponent,\n  selectors: [[\"app-showing\"]],\n  decls: 13,\n  vars: 7,\n  consts: [[1, \"create\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", \"id\", \"movie_name\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"id\", \"labelSchedule\"], [3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"value\", \"Create\", 1, \"btn-create\"], [3, \"value\"]],\n  template: function ShowingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ShowingComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\");\n      i0.ɵɵtext(4, \"MOVIE NAME:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ShowingComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.moviename = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"SCHEDULE:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ShowingComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.selectedSchedule = $event;\n      });\n      i0.ɵɵtemplate(10, ShowingComponent_option_10_Template, 2, 3, \"option\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\")(12, \"input\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.moviename)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedSchedule)(\"ngModelOptions\", i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.schedules);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"input[_ngcontent-%COMP%]{\\r\\n    border-radius: 10px;\\r\\n    margin-left: 1em;\\r\\n    margin-top: 1em;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.create[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n    display: block;\\r\\n    border: 5px solid saddlebrown;\\r\\n    padding: 1em;\\r\\n    border-radius: 10px;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    background-color: rgba(46, 29, 148, 0.1);\\r\\n}\\r\\n\\r\\n#labelSchedule[_ngcontent-%COMP%]{\\r\\n    margin-right: 1em;\\r\\n    margin-top: 4em;\\r\\n}\\r\\n\\r\\n#labelminutes[_ngcontent-%COMP%]{\\r\\n    margin-left: 1em;\\r\\n}\\r\\n\\r\\n#hour[_ngcontent-%COMP%], #minutes[_ngcontent-%COMP%]{\\r\\n    width: 30px;\\r\\n}\\r\\n\\r\\n.btn-create[_ngcontent-%COMP%]{\\r\\n    border-radius: 10px;\\r\\n    background-color: #302b96;\\r\\n    color: aliceblue;\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n.btn-create[_ngcontent-%COMP%]:hover{\\r\\n    background: darkorange;\\r\\n    transform: scale(1.2);\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%]:hover:not(:focus){\\r\\n    background: darkorange;\\r\\n    opacity: 30%;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%]:focus {\\r\\n    background-color: cornflowerblue;\\r\\n    color: aliceblue;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n@media screen and (max-width:480px){\\r\\n\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLXNob3dpbmcvc2hvd2luZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixxQ0FBcUM7SUFDckMsd0NBQXdDO0FBQzVDOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLHFCQUFxQjtJQUNyQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGdDQUFnQztJQUNoQyxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25COztBQUVGOztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXR7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcclxuICAgIG1hcmdpbi10b3A6IDFlbTtcclxufVxyXG5cclxubGFiZWx7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNyZWF0ZXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm9yZGVyOiA1cHggc29saWQgc2FkZGxlYnJvd247XHJcbiAgICBwYWRkaW5nOiAxZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDYsIDI5LCAxNDgsIDAuMSk7XHJcbn1cclxuXHJcbiNsYWJlbFNjaGVkdWxle1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxZW07XHJcbiAgICBtYXJnaW4tdG9wOiA0ZW07XHJcbn1cclxuXHJcbiNsYWJlbG1pbnV0ZXN7XHJcbiAgICBtYXJnaW4tbGVmdDogMWVtO1xyXG59XHJcblxyXG4jaG91ciwgI21pbnV0ZXN7XHJcbiAgICB3aWR0aDogMzBweDtcclxufVxyXG5cclxuLmJ0bi1jcmVhdGV7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMwMmI5NjtcclxuICAgIGNvbG9yOiBhbGljZWJsdWU7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbn1cclxuXHJcbi5idG4tY3JlYXRlOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZDogZGFya29yYW5nZTtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5pbnB1dDpob3Zlcjpub3QoOmZvY3VzKXtcclxuICAgIGJhY2tncm91bmQ6IGRhcmtvcmFuZ2U7XHJcbiAgICBvcGFjaXR5OiAzMCU7XHJcbn1cclxuXHJcbmlucHV0OmZvY3VzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGNvcm5mbG93ZXJibHVlO1xyXG4gICAgY29sb3I6IGFsaWNlYmx1ZTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NDgwcHgpe1xyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,YAAY,QAAQ,yBAAyB;;;;;;;;;ICK1CC,iCAAiE;IAAAA,YAA8B;IAAAA,iBAAS;;;;IAAjEA,0CAAyB;IAACA,eAA8B;IAA9BA,iEAA8B;;;;;;;;ADI3G,OAAM,MAAOC,gBAAgB;EAU3BC,YAAqBC,cAA+B,EAAUC,MAAe,EACnEC,KAAoB,EAAUC,gBAAiC;IADpD,mBAAc,GAAdH,cAAc;IAA2B,WAAM,GAANC,MAAM;IAC1D,UAAK,GAALC,KAAK;IAAyB,qBAAgB,GAAhBC,gBAAgB;IATxD,UAAK,GAAiB,IAAIP,YAAY,EAAE;EAWxC;EAEAQ,QAAQ;IACN,IAAI;MACF,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAE;QACnD,IAAI,CAACC,SAAS,GAACD,IAAI;MACrB,CAAC,CAAC;KACH,CAAC,OAAOE,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAEF,CAAC,CAAC;;EAE7B;EAEOG,QAAQ;IAEb,IAAG,IAAI,CAACC,SAAS,IAAG,IAAI,IAAI,IAAI,CAACC,gBAAgB,IAAEC,SAAS,EAAC;MAC3D,IAAG,IAAI,CAACF,SAAS,KAAG,EAAE,EAAC;QACrB,IAAI,CAACG,KAAK,CAACC,SAAS,GAAG,IAAI,CAACJ,SAAS;QACrC,IAAI,CAACG,KAAK,CAACE,QAAQ,GAAG,IAAI,CAACC,GAAG;QAC9B,IAAI,CAACH,KAAK,CAACI,UAAU,GAAG,IAAI,CAACN,gBAAgB;QAE7C,IAAI,CAACd,cAAc,CAACqB,WAAW,CAAC,IAAI,CAACL,KAAK,CAAC,CAACV,SAAS,CAACC,IAAI,IAAE;UAC1DG,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAACJ,IAAI,CAAC;UACvC,IAAI,CAACN,MAAM,CAACqB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC,CAAC;OACH,MAAI;QACHC,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;;KAE/C,MAAI;MACHD,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;;EAIhD;;AA7CW1B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ7BhC,8BAAoB;MACKA;QAAA,OAAYiC,cAAU;MAAA,EAAC;MACxCjC,6BAAO;MAAAA,2BAAW;MAAAA,iBAAQ;MAC1BA,gCAAmG;MAAhEA;QAAA;MAAA,EAAuB;MAA1DA,iBAAmG;MACnGA,qBAAI;MACJA,gCAA0B;MAAAA,yBAAS;MAAAA,iBAAQ;MAE3CA,iCAA+E;MAAvEA;QAAA;MAAA,EAA8B;MAClCA,yEAAwG;MAC5GA,iBAAS;MAETA,sBAAI;MAERA,iBAAO;;;MAVgCA,eAAuB;MAAvBA,uCAAuB;MAIlDA,eAA8B;MAA9BA,8CAA8B;MACTA,eAAY;MAAZA,uCAAY","names":["ShowingModel","i0","ShowingComponent","constructor","showingService","router","route","scheduleServices","ngOnInit","getSchedules","subscribe","data","schedules","e","console","log","onSubmit","moviename","selectedSchedule","undefined","model","movieName","urlImage","url","scheduleID","postShowing","navigate","window","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Angular Test Projects\\frontend-cinema\\src\\app\\create-showing\\showing.component.ts","D:\\Angular Test Projects\\frontend-cinema\\src\\app\\create-showing\\showing.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ShowingService } from '../services/showing.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ShowingModel } from '../models/showing.model'; \nimport { ScheduleModel } from '../models/schedule.model';\nimport { ScheduleService } from '../services/schedule.service';\n\n@Component({\n  selector: 'app-showing',\n  templateUrl: './showing.component.html',\n  styleUrls: ['./showing.component.css']\n})\nexport class ShowingComponent implements OnInit{\n\n  model: ShowingModel = new ShowingModel();\n  moviename! : String;\n  hour!: Number;\n  minutes!: Number;\n  url! : String;\n  selectedSchedule!:Number;\n  schedules!: ScheduleModel[];\n\n  constructor (private showingService : ShowingService, private router : Router,\n    private route:ActivatedRoute, private scheduleServices: ScheduleService){\n\n  }\n\n  ngOnInit(): void {\n    try {\n      this.scheduleServices.getSchedules().subscribe(data=>{\n        this.schedules=data;\n      });\n    } catch (e) {\n      console.log(\"error: \"+ e);\n    }\n  }\n\n  public onSubmit(){\n\n    if(this.moviename!= null && this.selectedSchedule!=undefined){\n      if(this.moviename!==\"\"){\n        this.model.movieName = this.moviename;\n        this.model.urlImage = this.url;\n        this.model.scheduleID = this.selectedSchedule;\n\n        this.showingService.postShowing(this.model).subscribe(data=>{\n          console.log(\"Info POST Showing: \"+data);\n          this.router.navigate(['list-showing']);\n        });\n      }else{\n        window.alert(\"Can't leave the fields blank\");\n      }\n    }else{\n      window.alert(\"Can't leave the fields blank\");\n    }\n    \n\n  }\n\n}\n","<div class=\"create\">\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <label>MOVIE NAME:</label>\n        <input type=\"text\" id=\"movie_name\" [(ngModel)]=\"moviename\" [ngModelOptions]=\"{ standalone: true }\">\n        <br>\n        <label id=\"labelSchedule\">SCHEDULE:</label>\n\n        <select [(ngModel)]=\"selectedSchedule\" [ngModelOptions]=\"{ standalone: true }\">\n            <option *ngFor=\"let item of schedules\" [value]=\"item.scheduleID\">{{item.hour}}:{{item.minutes}}</option>\n        </select>\n\n        <br>\n        <input type=\"submit\" value=\"Create\" class=\"btn-create\">\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}