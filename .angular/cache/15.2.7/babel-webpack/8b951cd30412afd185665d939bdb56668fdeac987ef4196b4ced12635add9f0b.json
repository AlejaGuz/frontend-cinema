{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ShowingService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"https://localhost:7001/api/Showing\";\n  }\n  postShowing(showing) {\n    return this.httpClient.post(`${this.baseURL}`, showing);\n  }\n  getShowings() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n}\nShowingService.ɵfac = function ShowingService_Factory(t) {\n  return new (t || ShowingService)(i0.ɵɵinject(i1.HttpClient));\n};\nShowingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShowingService,\n  factory: ShowingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IADtB,YAAO,GAAG,oCAAoC;EACR;EAE9CC,WAAW,CAACC,OAAqB;IAC/B,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAe,GAAG,IAAI,CAACC,OAAO,EAAE,EAAEF,OAAO,CAAC;EACvE;EAEAG,WAAW;IACT,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAiB,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC/D;;AAXWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["ShowingService","constructor","httpClient","postShowing","showing","post","baseURL","getShowings","get","factory","providedIn"],"sourceRoot":"","sources":["D:\\Angular Test Projects\\frontend-cinema\\src\\app\\services\\showing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ShowingModel } from '../models/showing.model';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowingService {\n\n  private baseURL = \"https://localhost:7001/api/Showing\";\n  constructor(private httpClient: HttpClient) { }\n\n  postShowing(showing: ShowingModel): Observable <ShowingModel>{\n    return this.httpClient.post<ShowingModel>(`${this.baseURL}`, showing);\n  }\n\n  getShowings(): Observable <ShowingModel[]>{\n    return this.httpClient.get<ShowingModel[]>(`${this.baseURL}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}